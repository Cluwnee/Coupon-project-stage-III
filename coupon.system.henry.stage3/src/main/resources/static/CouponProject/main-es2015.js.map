{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/company/company.component.ts","./src/app/components/company/company.component.html","./src/app/components/customer/customer.component.ts","./src/app/components/customer/customer.component.html","./src/app/components/homepage/homepage.component.ts","./src/app/components/homepage/homepage.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/model/company.ts","./src/app/model/coupon.ts","./src/app/model/customer.ts","./src/app/service/admin.service.ts","./src/app/service/company.service.ts","./src/app/service/coupon-load.service.ts","./src/app/service/customer.service.ts","./src/app/service/login.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACsB;AACT;AACA;AACM;AACG;;;AAG7E,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAC5C,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAgB,EAAC;IAC9C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;CAClD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;ICM1B,uEAA6C;IAAA,yEAAc;IAAA,4DAAI;;;IAC/D,wEAAiD;IAAA,2EAAgB;IAAA,4DAAI;;;IACrE,wEAAmD;IAAA,4EAAiB;IAAA,4DAAI;;ADDjF,MAAM,YAAY;IAQvB;QAPA,UAAK,GAAG,eAAe,CAAC;QAExB,aAAQ,GAAW,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtD,UAAK,GAAY,KAAK,CAAC;QACvB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;IAEZ,CAAC;IAEf,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAEM,SAAS;QACd,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;QAClD,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,OAAO;gBACV,IAAI,CAAC,KAAK,GAAG,IAAI;gBACjB,MAAM;YAER,KAAK,SAAS;gBACZ,IAAI,CAAC,OAAO,GAAG,IAAI;gBACnB,MAAM;YAER,KAAK,UAAU;gBACb,IAAI,CAAC,QAAQ,GAAG,IAAI;gBACpB,MAAM;YAER;gBACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,MAAM;SACT;IACH,CAAC;;wEAnCU,YAAY;4FAAZ,YAAY;QCPzB,sEAEE;QAAA,iFAEE;QAAA,2EAAU;QAAA,wEAAa;QAAA,4DAAW;QAAC,4FACvB;QAAA,uEAAqB;QAAA,kEAAO;QAAA,4DAAI;QAC5C,wEAAY;QAAA,oGAA6C;QACzD,wEAAY;QAAA,sGAAiD;QAC7D,yEAAY;QAAA,sGAAmD;QAC/D,sEAAkC;QAElC,qFACE;QAAA,wEAAoC;QAAA,0EAAc;QAAA,4DAAI;QACxD,4DAAW;QAEX,6EACE;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC5B,4DAAS;QAEX,4DAAc;QAEd,wEAEE;QAAA,4EAA+B;QAEjC,4DAAO;QAET,4DAAM;;;QArBgC,0DAAsB;QAAtB,oFAAsB;QACpB,0DAAwB;QAAxB,sFAAwB;QACvB,0DAAyB;QAAzB,uFAAyB;QAOtC,0DAA6B;QAA7B,kFAA6B;;6FDR5C,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACgC;AACvB;AACK;AACN;AACI;AACJ;AACE;AACS;AACb;AACR;AACY;AACoB;AACT;AACM;AACG;AACT;AACJ;AACL;AACW;;AAgC/D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAlBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;YAChB,0EAAgB;YAChB,oEAAa;YACb,wEAAe;YACf,oEAAa;YACb,uEAAc;YACd,gFAAkB;YAClB,mEAAmB;YACnB,2DAAW;YACX,uEAAc;YACd,8EAAiB;YACjB,yEAAe;YACf,oFAAoB;SACrB;mIAIU,SAAS,mBA5BlB,2DAAY;QACZ,0FAAiB;QACjB,iFAAc;QACd,uFAAgB;QAChB,0FAAiB;QACjB,iFAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;QAChB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,uEAAc;QACd,gFAAkB;QAClB,mEAAmB;QACnB,2DAAW;QACX,uEAAc;QACd,8EAAiB;QACjB,yEAAe;QACf,oFAAoB;6FAKX,SAAS;cA9BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0FAAiB;oBACjB,iFAAc;oBACd,uFAAgB;oBAChB,0FAAiB;oBACjB,iFAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,qEAAgB;oBAChB,0EAAgB;oBAChB,oEAAa;oBACb,wEAAe;oBACf,oEAAa;oBACb,uEAAc;oBACd,gFAAkB;oBAClB,mEAAmB;oBACnB,2DAAW;oBACX,uEAAc;oBACd,8EAAiB;oBACjB,yEAAe;oBACf,oFAAoB;iBACrB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEF;AACE;AACkB;;;;;;;;;;ICGxD,4EAAqF;IAAA,oFAAyB;IAAA,4DAAY;;;IAK1H,4EAAqG;IAAA,qFAA0B;IAAA,4DAAY;;;IAC3I,4EAAkG;IAAA,yEAAc;IAAA,4DAAY;;;IAK5H,4EAA2G;IAAA,wFAA6B;IAAA,4DAAY;;;IACpJ,4EAA4G;IAAA,oGAAyC;IAAA,4DAAY;;;IAUjK,4EAAuF;IAAA,kFAAuB;IAAA,4DAAY;;;IAK1H,4EAAuF;IAAA,iFAAsB;IAAA,4DAAY;;;IAKzH,4EAAuG;IAAA,sFAA2B;IAAA,4DAAY;;;IAC9I,4EAAoG;IAAA,yEAAc;IAAA,4DAAY;;;IAK9H,4EAA6G;IAAA,yFAA8B;IAAA,4DAAY;;;IACvJ,4EAA8G;IAAA,oGAAyC;IAAA,4DAAY;;;IAUnK,4EAAuF;IAAA,4FAAiC;IAAA,4DAAY;;;IAE1C,uEAAyB;IAAA,uDAAgH;IAAA,4DAAO;;;IAAvH,0DAAgH;IAAhH,4NAAgH;;;IAOnO,4EAAyF;IAAA,gGAAqC;IAAA,4DAAY;;;IAE/C,uEAA0B;IAAA,uDAAqJ;IAAA,4DAAO;;;IAA5J,0DAAqJ;IAArJ,2QAAqJ;;;;IAK9Q,qEAAsC;IAAA,uDAClC;IAAA,6EAA2D;IAAjC,uWAAgC;IAAC,iEAAM;IAAA,4DAAS;IAC1E,6EAAqE;IAA3C,iXAA0C;IAAC,iEAAM;IAAA,4DAAS;IACxF,4DAAK;;;IAHiC,0DAClC;IADkC,iMAClC;;;IAQA,4EAAiG;IAAA,oFAAyB;IAAA,4DAAY;;;IAKtI,4EAAyG;IAAA,qFAA0B;IAAA,4DAAY;;;IAC/I,4EAAsG;IAAA,yEAAc;IAAA,4DAAY;;;IAKhI,4EAA+G;IAAA,wFAA6B;IAAA,4DAAY;;;IACxJ,4EAAgH;IAAA,oGAAyC;IAAA,4DAAY;;;;IAhB7K,0EAAkE;IAC9D,iFACI;IAAA,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IAClC,uEACA;IAAA,8HAAiG;IACrG,4DAAiB;IAAA,gEACjB;IAAA,iFACI;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACnC,wEACA;IAAA,gIAAyG;IACzG,gIAAsG;IAC1G,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,wEACA;IAAA,gIAA+G;IAC/G,gIAAgH;IACpH,4DAAiB;IAAA,iEAAK;IAAA,iEACtB;IAAA,6EAA0F;IAAhE,4TAAyB;IAAuC,kEAAM;IAAA,4DAAS;IAAA,8EAAqD;IAA3B,6TAA0B;IAAC,kEAAM;IAAA,4DAAS;IACjL,4DAAO;;;IAnBD,gGAA+B;IAIlB,0DAAqF;IAArF,yNAAqF;IAKrF,0DAA6F;IAA7F,qOAA6F;IAC7F,0DAA0F;IAA1F,kOAA0F;IAK1F,0DAAmG;IAAnG,8OAAmG;IACnG,0DAAoG;IAApG,+OAAoG;IAE/D,0DAAqC;IAArC,sGAAqC;;;;IAKzF,qEAAuC;IAAA,uDACnC;IAAA,6EAA4D;IAAlC,yWAAiC;IAAC,iEAAM;IAAA,4DAAS;IAC3E,6EAAwE;IAA9C,qXAA6C;IAAC,iEAAM;IAAA,4DAAS;IAC3F,4DAAK;;;IAHkC,0DACnC;IADmC,yOACnC;;;IAQA,4EAAmG;IAAA,kFAAuB;IAAA,4DAAY;;;IAKtI,4EAAmG;IAAA,iFAAsB;IAAA,4DAAY;;;IAKrI,4EAA2G;IAAA,sFAA2B;IAAA,4DAAY;;;IAClJ,4EAAwG;IAAA,yEAAc;IAAA,4DAAY;;;IAKlI,4EAAiH;IAAA,yFAA8B;IAAA,4DAAY;;;IAC3J,4EAAkH;IAAA,oGAAyC;IAAA,4DAAY;;;;IArB/K,0EAAmE;IAC/D,iFACI;IAAA,4EAAW;IAAA,4EAAiB;IAAA,4DAAY;IACxC,uEACA;IAAA,8HAAmG;IACvG,4DAAiB;IAAA,gEACjB;IAAA,iFACI;IAAA,4EAAW;IAAA,2EAAgB;IAAA,4DAAY;IACvC,wEACA;IAAA,gIAAmG;IACvG,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,wEAAY;IAAA,4DAAY;IACnC,wEACA;IAAA,gIAA2G;IAC3G,gIAAwG;IAC5G,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,wEACA;IAAA,gIAAiH;IACjH,gIAAkH;IACtH,4DAAiB;IAAA,iEAAK;IAAA,iEACtB;IAAA,6EAA4F;IAAlE,6TAA0B;IAAwC,kEAAM;IAAA,4DAAS;IAAA,8EAAqD;IAA3B,6TAA0B;IAAC,kEAAM;IAAA,4DAAS;IACnL,4DAAO;;;IAxBD,iGAAgC;IAInB,0DAAuF;IAAvF,4NAAuF;IAKvF,0DAAuF;IAAvF,4NAAuF;IAKvF,0DAA+F;IAA/F,wOAA+F;IAC/F,0DAA4F;IAA5F,qOAA4F;IAK5F,0DAAqG;IAArG,iPAAqG;IACrG,0DAAsG;IAAtG,kPAAsG;IAEhE,0DAAsC;IAAtC,uGAAsC;;ADnH5F,MAAM,cAAc;IAwBzB,YAAoB,YAAyB,EAAU,EAAc,EAAU,KAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,OAAE,GAAF,EAAE,CAAY;QAAU,UAAK,GAAL,KAAK,CAAY;QAJhG,oCAAoC;QACpC,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;IAEyE,CAAC;IAErG,QAAQ;QACN,mBAAmB;QACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC3D,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACvE,CAAC,CAAC;QAEH,oBAAoB;QACpB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC5D,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACxE,CAAC,CAAC;QAEH,2EAA2E;QAC3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QAEH,yBAAyB;QACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,cAAc,EAAE,CAAC,EAAE,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9D,iBAAiB,EAAE,CAAC,EAAE,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,0BAA0B;QAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9D,kBAAkB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,8CAA8C;QAC9C,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,EAAC,EAAE;YAC7E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,6CAA6C;QAC7C,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,EAAC,EAAE;YAC7E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,6DAA6D;IACtD,aAAa;QAClB,MAAM,OAAO,GAAW,IAAI,6DAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC;QACvM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,CAAE,CAAC,OAAO,EAAC,EAAE;YACnF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iCAAiC,GAAG,OAAO,CAAC,SAAS,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAC3F,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gEAAgE;IACzD,cAAc;QACnB,MAAM,QAAQ,GAAY,IAAI,+DAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC;QACjQ,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAE,CAAC,QAAQ,EAAC,EAAE;YACtF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kCAAkC,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAC9F,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iHAAiH;IAC1G,aAAa,CAAC,OAAe;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,mBAAmB;QAC1C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACjF,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IACzF,CAAC;IAEA,sDAAsD;IAC/C,cAAc;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,uGAAuG;IAChG,aAAa;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QACpF,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;QAC1F,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YACvF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mHAAmH;IAC5G,aAAa,CAAC,QAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,mBAAmB;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC5E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACrF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC7F,CAAC;IAED,sDAAsD;IAC/C,cAAc;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,uGAAuG;IAChG,cAAc;QACnB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC/E,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACxF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAC9F,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YAC1F,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACrE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;IACtB,aAAa,CAAC,EAAE;QACrB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YAC9E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAA8B;IACvB,cAAc,CAAC,EAAE;QACtB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YAC/E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,mDAAmD;IAC5C,aAAa;QAClB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YACtH,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACrD,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IAC7C,cAAc;QACnB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YACzH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtD,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6EAA6E;IACtE,eAAe;QACpB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,EAAC,EAAE;YAC7E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IACrE,eAAe;QACpB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,EAAC,EAAE;YAC7E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;IACzC,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;IACzC,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAEM,IAAI;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;IAEM,IAAI;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;;4EAnPU,cAAc;8FAAd,cAAc;QCb3B,sEAEI;QAAA,0EAAuC;QACnC,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,iFACI;QAAA,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,sEACA;QAAA,sHAAqF;QACzF,4DAAiB;QAAA,gEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,uEACA;QAAA,wHAAqG;QACrG,wHAAkG;QACtG,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,4EAAgB;QAAA,4DAAY;QACvC,uEACA;QAAA,wHAA2G;QAC3G,wHAA4G;QAChH,4DAAiB;QAAA,iEAAK;QAAA,iEACtB;QAAA,6EAA0F;QAAhE,uIAAS,mBAAe,IAAC;QAAuC,uEAAW;QAAA,4DAAS;QAClH,4DAAO;QAAA,iEAEP;QAAA,2EAAwC;QACpC,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,kFACI;QAAA,6EAAW;QAAA,+EAAmB;QAAA,4DAAY;QAC1C,uEACA;QAAA,wHAAuF;QAC3F,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,8EAAkB;QAAA,4DAAY;QACzC,uEACA;QAAA,wHAAuF;QAC3F,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,uEACA;QAAA,wHAAuG;QACvG,wHAAoG;QACxG,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,uEACA;QAAA,wHAA6G;QAC7G,wHAA8G;QAClH,4DAAiB;QAAA,iEAAK;QAAA,iEACtB;QAAA,6EAA4F;QAAlE,uIAAS,oBAAgB,IAAC;QAAwC,wEAAY;QAAA,4DAAS;QACrH,4DAAO;QAAA,iEAEP;QAAA,2EAAgC;QAC5B,sEAAI;QAAA,yFAA6B;QAAA,4DAAK;QACtC,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,wEACA;QAAA,wHAAuF;QAC3F,4DAAiB;QACjB,6EAAmF;QAAzD,uIAAS,mBAAe,IAAC;QAAgC,wEAAE;QAAA,4DAAS;QAAA,8GAAyB;QAC3H,4DAAO;QAAA,iEAEP;QAAA,2EACI;QAAA,kFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,wEACA;QAAA,wHAAyF;QAC7F,4DAAiB;QACjB,6EAAoF;QAA1D,uIAAS,oBAAgB,IAAC;QAAgC,wEAAE;QAAA,4DAAS;QAAA,8GAA0B;QAC7H,4DAAO;QAAA,iEAEP;QAAA,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QAAA,8EAAsD;QAA5B,uIAAS,qBAAiB,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC7F,sEACI;QAAA,2GAAsC;QAI1C,4DAAK;QAAA,iEACL;QAAA,gHAAkE;QAmB3D,iEAEP;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QAAA,8EAAsD;QAA5B,uIAAS,qBAAiB,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC5F,sEACI;QAAA,2GAAuC;QAI3C,4DAAK;QAAA,iEACL;QAAA,gHAAmE;QAwB5D,kEAEX;QAAA,4DAAM;;QAjII,0DAA+B;QAA/B,4FAA+B;QAKlB,0DAAyE;QAAzE,2LAAyE;QAKzE,0DAAyF;QAAzF,mNAAyF;QACzF,0DAAsF;QAAtF,gNAAsF;QAKtF,0DAA+F;QAA/F,4NAA+F;QAC/F,0DAAgG;QAAhG,6NAAgG;QAE3D,0DAAqC;QAArC,kGAAqC;QAGvF,0DAAgC;QAAhC,6FAAgC;QAKnB,0DAA2E;QAA3E,8LAA2E;QAK3E,0DAA2E;QAA3E,8LAA2E;QAK3E,0DAA2F;QAA3F,sNAA2F;QAC3F,0DAAwF;QAAxF,mNAAwF;QAKxF,0DAAiG;QAAjG,+NAAiG;QACjG,0DAAkG;QAAlG,gOAAkG;QAE5D,0DAAsC;QAAtC,mGAAsC;QAGzF,0DAAwB;QAAxB,qFAAwB;QAKX,0DAA2E;QAA3E,8LAA2E;QAEtC,0DAA8B;QAA9B,2FAA8B;QAAkB,0DAAkB;QAAlB,gFAAkB;QAGpH,0DAAwB;QAAxB,qFAAwB;QAIX,0DAA6E;QAA7E,iMAA6E;QAEvC,0DAA8B;QAA9B,2FAA8B;QAAkB,0DAAmB;QAAnB,iFAAmB;QAKpH,0DAAiC;QAAjC,kFAAiC;QAKH,0DAA0B;QAA1B,wFAA0B;QAuBxD,0DAAkC;QAAlC,kFAAkC;QAKH,0DAA0B;QAA1B,wFAA0B;;6FD5FxD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AAEnC;;;;;;;;;;;;;ICCzC,uEAAsB;IAAA,uDAAyI;IAAA,4DAAO;;;IAAhJ,0DAAyI;IAAzI,iPAAyI;;;IAa1J,4EAA6F;IAAA,uFAA4B;IAAA,4DAAY;;;IAKnI,4EAAuF;IAAA,oFAAyB;IAAA,4DAAY;;;IAC5H,4EAAwF;IAAA,2FAAgC;IAAA,4DAAY;;;IAKpI,4EAAmG;IAAA,0FAA+B;IAAA,4DAAY;;;IAC9I,4EAAoG;IAAA,2FAAgC;IAAA,4DAAY;;;IAKhJ,4EAA+F;IAAA,yFAA8B;IAAA,4DAAY;;;IAKzI,4EAA2F;IAAA,uFAA4B;IAAA,4DAAY;;;IAKnI,4EAAyF;IAAA,qFAA0B;IAAA,4DAAY;;;IAC/H,4EAAoF;IAAA,0FAA+B;IAAA,4DAAY;;;IAK/H,4EAAuF;IAAA,oFAAyB;IAAA,4DAAY;;;IAC5H,4EAAkF;IAAA,yFAA8B;IAAA,4DAAY;;;IAK5H,4EAAuF;IAAA,oFAAyB;IAAA,4DAAY;;;IAYlC,uEAC1F;IAAA,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,uZACJ;;;;IAKA,qEAAmC;IAAA,uDAC/B;IAAA,4EAA6D;IAAnC,0WAAkC;IAAC,iEAAM;IAAA,4DAAS;IAAA,4EAAkE;IAAxC,+WAAuC;IAAC,iEAAM;IAAA,4DAAS;IACjK,4DAAK;;;IAF8B,0DAC/B;IAD+B,uVAC/B;;;IAYA,4EAAiG;IAAA,uFAA4B;IAAA,4DAAY;;;IAKvI,4EAA2F;IAAA,oFAAyB;IAAA,4DAAY;;;IAChI,4EAA4F;IAAA,2FAAgC;IAAA,4DAAY;;;IAKxI,4EAAuG;IAAA,0FAA+B;IAAA,4DAAY;;;IAClJ,4EAAwG;IAAA,2FAAgC;IAAA,4DAAY;;;IAKpJ,4EAAmG;IAAA,yFAA8B;IAAA,4DAAY;;;IAK7I,4EAA+F;IAAA,uFAA4B;IAAA,4DAAY;;;IAKvI,4EAA6F;IAAA,qFAA0B;IAAA,4DAAY;;;IACnI,4EAAwF;IAAA,0FAA+B;IAAA,4DAAY;;;IAKnI,4EAA2F;IAAA,oFAAyB;IAAA,4DAAY;;;IAChI,4EAAsF;IAAA,yFAA8B;IAAA,4DAAY;;;IAKhI,4EAA2F;IAAA,oFAAyB;IAAA,4DAAY;;;;IAhD1I,0EACI;IAAA,iFACI;IAAA,iFACI;IAAA,gFAAgC;IAAA,sEAAW;IAAA,4DAAa;IACxD,gFAA6B;IAAA,mEAAQ;IAAA,4DAAa;IAClD,gFAAgC;IAAA,sEAAW;IAAA,4DAAa;IACxD,gFAA6B;IAAA,oEAAQ;IAAA,4DAAa;IAClD,iFAAkC;IAAA,yEAAa;IAAA,4DAAa;IAChE,4DAAa;IACb,kIAAiG;IACnG,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,wEAAY;IAAA,4DAAY;IACnC,wEACA;IAAA,kIAA2F;IAC3F,kIAA4F;IAChG,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,8EAAkB;IAAA,4DAAY;IACzC,wEACA;IAAA,kIAAuG;IACvG,kIAAwG;IAC5G,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,6EAAiB;IAAA,4DAAY;IACxC,wEACA;IAAA,kIAAmG;IACvG,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,2EAAe;IAAA,4DAAY;IACtC,wEACA;IAAA,kIAA+F;IACnG,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,wEACA;IAAA,kIAA6F;IAC7F,kIAAwF;IAC5F,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,wEAAY;IAAA,4DAAY;IACnC,wEACA;IAAA,kIAA2F;IAC3F,kIAAsF;IAC1F,4DAAiB;IAAA,iEACjB;IAAA,kFACI;IAAA,6EAAW;IAAA,wEAAY;IAAA,4DAAY;IACnC,wEACA;IAAA,kIAA2F;IAC/F,4DAAiB;IAAA,iEAAK;IAAA,iEACtB;IAAA,8EAAwF;IAA9D,6TAAwB;IAAsC,kEAAM;IAAA,4DAAS;IAAA,6EAAwD;IAA9B,kUAA6B;IAAC,kEAAM;IAAA,4DAAS;IACpL,4DAAO;;;IAnDD,+FAA8B;IASjB,2DAAqF;IAArF,yNAAqF;IAKnF,0DAA+E;IAA/E,gNAA+E;IAC/E,0DAAgF;IAAhF,iNAAgF;IAKhF,0DAA2F;IAA3F,kOAA2F;IAC3F,0DAA4F;IAA5F,mOAA4F;IAK5F,0DAAuF;IAAvF,4NAAuF;IAKvF,0DAAmF;IAAnF,sNAAmF;IAKnF,0DAAiF;IAAjF,mNAAiF;IACjF,0DAA4E;IAA5E,8MAA4E;IAK5E,0DAA+E;IAA/E,gNAA+E;IAC/E,0DAA0E;IAA1E,2MAA0E;IAK1E,0DAA+E;IAA/E,gNAA+E;IAE3C,0DAAoC;IAApC,qGAAoC;;;;IAO7F,sEACI;IAAA,iFACI;IAAA,uEACJ;IAAA,4DAAiB;IACjB,4EAA2D;IAAjC,oUAAgC;IAAC,iEAAM;IAAA,4DAAS;IAC9E,4DAAM;;;IAHkE,0DAAwB;IAAxB,yFAAwB;;;;IAKhG,sEACI;IAAA,iFACI;IAAA,iFACI;IAAA,gFAAgC;IAAA,sEAAW;IAAA,4DAAa;IACxD,gFAA6B;IAAA,mEAAQ;IAAA,4DAAa;IAClD,gFAAgC;IAAA,sEAAW;IAAA,4DAAa;IACxD,gFAA6B;IAAA,oEAAQ;IAAA,4DAAa;IAClD,iFAAkC;IAAA,yEAAa;IAAA,4DAAa;IAChE,4DAAa;IACf,4DAAiB;IACnB,6EAA2D;IAAjC,qUAAgC;IAAC,kEAAM;IAAA,4DAAS;IAC9E,4DAAM;;;IATc,0DAA4B;IAA5B,6FAA4B;;;IAY5C,qEAA0C;IAAA,uDAAoO;IAAA,4DAAK;;;IAAzO,0DAAoO;IAApO,+VAAoO;;;IADlR,qEACI;IAAA,kHAA0C;IAC9C,4DAAK;;;IADG,0DAAqC;IAArC,0FAAqC;;ADjJ1C,MAAM,gBAAgB;IAsB3B,YAAoB,cAA6B,EAAU,EAAc,EAAU,KAAiB;QAAhF,mBAAc,GAAd,cAAc,CAAe;QAAU,OAAE,GAAF,EAAE,CAAY;QAAU,UAAK,GAAL,KAAK,CAAY;QAHpG,kCAAkC;QAClC,cAAS,GAAY,KAAK,CAAC;IAE6E,CAAC;IAEzG,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACnE,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,iCAAiC;QACjC,IAAI,CAAC,cAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAExC,8BAA8B;QAC9B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;IACX,YAAY;QACjB,MAAM,MAAM,GAAU,IAAI,2DAAM,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,EACxL,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,EAClJ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;QAC9F,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACjF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kCAAkC,GAAG,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAC1F,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+GAA+G;IACxG,gBAAgB,CAAC,MAAa;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,qCAAqC;IAC9B,iBAAiB;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,uGAAuG;IAChG,YAAY;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAChF,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC5E,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACpE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACtF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;IACrB,YAAY,CAAC,EAAE;QACpB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YAC/E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,YAAY;QACjB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACvH,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACrD,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IAChB,oBAAoB;QACzB,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACvG,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;IACd,oBAAoB;QACzB,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YAC9G,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAiC;IAC1B,WAAW;QAChB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IACxC,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IACxC,CAAC;;gFA5KU,gBAAgB;gGAAhB,gBAAgB;QCZ7B,sEAEI;QAAA,uEACC;QAAA,4EAAkD;QAAxB,wIAAS,iBAAa,IAAC;QAAC,2EAAgB;QAAA,4DAAS;QAC3E,8GAAsB;QACvB,4DAAO;QAAA,gEAAK;QAAA,gEAEZ;QAAA,0EACI;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,kFACE;QAAA,iFACI;QAAA,iFAAgC;QAAA,uEAAW;QAAA,4DAAa;QACxD,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QAClD,iFAAgC;QAAA,uEAAW;QAAA,4DAAa;QACxD,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QAClD,iFAAkC;QAAA,yEAAa;QAAA,4DAAa;QAChE,4DAAa;QACb,0HAA6F;QAC/F,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,uEACA;QAAA,0HAAuF;QACvF,0HAAwF;QAC5F,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,8EAAkB;QAAA,4DAAY;QACzC,wEACA;QAAA,0HAAmG;QACnG,0HAAoG;QACxG,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,wEACA;QAAA,0HAA+F;QACnG,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,wEACA;QAAA,0HAA2F;QAC/F,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,wEACA;QAAA,0HAAyF;QACzF,0HAAoF;QACxF,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACA;QAAA,0HAAuF;QACvF,0HAAkF;QACtF,4DAAiB;QAAA,iEACjB;QAAA,kFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACA;QAAA,0HAAuF;QAC3F,4DAAiB;QAAA,iEAAK;QAAA,iEACtB;QAAA,8EAAwF;QAA9D,yIAAS,kBAAc,IAAC;QAAsC,sEAAU;QAAA,4DAAS;QAC/G,4DAAO;QAAA,iEAEP;QAAA,2EACI;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,kFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,6EAAW;QAAA,+FAAmC;QAAA,4DAAY;QAC9D,4DAAiB;QACjB,8EAAmF;QAAzD,yIAAS,kBAAc,IAAC;QAAiC,wEAAE;QAAA,4DAAS;QAAA,gHAC1F;QAER,4DAAO;QAAA,iEAEP;QAAA,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAAA,6EAC7B;QADkE,wIAAS,oBAAgB,IAAC;QAA/D,4DAC7B;QAAA,sEACI;QAAA,6GAAmC;QAGvC,4DAAK;QAAA,iEACL;QAAA,mHACI;QAkDG,iEAEP;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,wFAA8C;QAAA,qEAAS;QAAA,4DAAmB;QAAA,iEAC1E;QAAA,yFAAiD;QAAA,qEAAQ;QAAA,4DAAmB;QAAA,kEAE5E;QAAA,gHACI;QAIE,kEAEN;QAAA,iHACI;QAUE,kEAEN;QAAA,8GACI;QACC,kEAET;QAAA,4DAAM;;QA5JK,0DAAe;QAAf,6EAAe;QAGhB,0DAA8B;QAA9B,2FAA8B;QAUnB,2DAAiF;QAAjF,uMAAiF;QAK/E,0DAA2E;QAA3E,8LAA2E;QAC3E,0DAA4E;QAA5E,+LAA4E;QAK5E,0DAAuF;QAAvF,gNAAuF;QACvF,0DAAwF;QAAxF,iNAAwF;QAKxF,0DAAmF;QAAnF,0MAAmF;QAKnF,0DAA+E;QAA/E,oMAA+E;QAK/E,0DAA6E;QAA7E,iMAA6E;QAC7E,0DAAwE;QAAxE,4LAAwE;QAKxE,0DAA2E;QAA3E,8LAA2E;QAC3E,0DAAsE;QAAtE,yLAAsE;QAKtE,0DAA2E;QAA3E,8LAA2E;QAEvC,0DAAoC;QAApC,iGAAoC;QAGrF,0DAAyB;QAAzB,sFAAyB;QAOwB,0DAA+B;QAA/B,4FAA+B;QAAkB,0DAAiB;QAAjB,+EAAiB;QAOjH,0DAA8B;QAA9B,gFAA8B;QAID,0DAA0B;QAA1B,wFAA0B;QAsD7C,0DAA2B;QAA3B,wFAA2B;QAC3B,0DAA8B;QAA9B,2FAA8B;QAE3C,0DAAyB;QAAzB,uFAAyB;QAOzB,0DAA4B;QAA5B,0FAA4B;QAa7B,0DAAqB;QAArB,mFAAqB;;6FDhJhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIL;;;;;;;;;;;;ICAxC,uEAAuB;IAAA,uDAAsL;IAAA,4DAAO;;;IAA7L,0DAAsL;IAAtL,uSAAsL;;;IAK1M,qEAAmC;IAAA,uDAA2N;IAAA,4DAAK;;;IAAhO,0DAA2N;IAA3N,6UAA2N;;;;IAOlQ,sEACI;IAAA,iFACI;IAAA,sEACJ;IAAA,4DAAiB;IACjB,4EAA2D;IAAjC,iUAAgC;IAAC,iEAAM;IAAA,4DAAS;IAC9E,4DAAM;;;IAHkE,0DAAwB;IAAxB,wFAAwB;;;;IAKhG,sEACI;IAAA,iFACI;IAAA,gFACI;IAAA,gFAAgC;IAAA,sEAAW;IAAA,4DAAa;IACxD,gFAA6B;IAAA,mEAAQ;IAAA,4DAAa;IAClD,gFAAgC;IAAA,sEAAW;IAAA,4DAAa;IACxD,gFAA6B;IAAA,oEAAQ;IAAA,4DAAa;IAClD,kFAAkC;IAAA,yEAAa;IAAA,4DAAa;IAChE,4DAAa;IACf,4DAAiB;IACnB,6EAA2D;IAAjC,kUAAgC;IAAC,kEAAM;IAAA,4DAAS;IAC9E,4DAAM;;;IATc,0DAA4B;IAA5B,4FAA4B;;;IAY5C,qEAA0C;IAAA,uDAAoO;IAAA,4DAAK;;;IAAzO,0DAAoO;IAApO,+VAAoO;;;IADlR,qEACI;IAAA,iHAA0C;IAC9C,4DAAK;;;IADG,0DAAqC;IAArC,yFAAqC;;AD1B1C,MAAM,iBAAiB;IAW5B,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;IAAI,CAAC;IAExD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YAClF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,sBAAsB;IACf,oBAAoB;QACzB,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YAC7G,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;IACd,oBAAoB;QACzB,IAAI,CAAC,eAAe,CAAC,6BAA6B,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACpH,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAC,EAAE;YAC/E,IAAI,CAAC,QAAQ,GAAG,QAAQ;QAC1B,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;;kFA5CU,iBAAiB;iGAAjB,iBAAiB;QCX9B,sEAEI;QAAA,uEACC;QAAA,4EAAkD;QAAxB,yIAAS,iBAAa,IAAC;QAAC,2EAAgB;QAAA,4DAAS;QAC3E,+GAAuB;QACxB,4DAAO;QAAA,gEAAK;QAAA,gEAEZ;QAAA,qEAAI;QAAA,yFAA8B;QAAA,4DAAK;QACvC,qEACI;QAAA,6GAAmC;QACvC,4DAAK;QAAA,iEAEL;QAAA,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAC7B,uFAA8C;QAAA,qEAAS;QAAA,4DAAmB;QAAA,iEAC1E;QAAA,uFAAiD;QAAA,oEAAQ;QAAA,4DAAmB;QAAA,iEAE5E;QAAA,+GACI;QAIE,iEAEN;QAAA,gHACI;QAUE,iEAEN;QAAA,6GACI;QACC,iEAET;QAAA,4DAAM;;QApCK,0DAAgB;QAAhB,8EAAgB;QAKf,0DAA8B;QAA9B,gFAA8B;QAIpB,0DAA2B;QAA3B,wFAA2B;QAC3B,0DAA8B;QAA9B,2FAA8B;QAE3C,0DAAyB;QAAzB,uFAAyB;QAOzB,0DAA4B;QAA5B,0FAA4B;QAa7B,0DAAqB;QAArB,mFAAqB;;6FDzBhB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;ICMtC,4EAAqF;IAA3D,saAAgC;IAA2B,gFAAW;IAAA,4DAAS;;;IAD7G,qEAAmC;IAAA,uDAC/B;IAAA,wHAAqF;IAAoB,gEAAK;IAAA,gEAClH;IAAA,4DAAK;;;;IAF8B,0DAC/B;IAD+B,6VAC/B;IAA2D,0DAAyB;IAAzB,0FAAyB;;ADMzF,MAAM,iBAAiB;IAO5B,YAAoB,WAA+B,EAAU,YAAyB,EAAU,eAA+B,EAAU,KAAiB;QAAtI,gBAAW,GAAX,WAAW,CAAoB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAY;QAH1J,aAAQ,GAAW,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtD,aAAQ,GAAY,KAAK,CAAC;IAEoI,CAAC;IAE/J,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YACpD,IAAI,CAAC,OAAO,GAAG,OAAO;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAEM,cAAc,CAAC,MAAM;QAC1B,IAAI,CAAC,WAAW,GAAG,MAAM;QACzB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,EAAC,EAAE;YACpF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QACvE,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,SAAS;QACd,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;IACH,CAAC;;kFAjCU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,sEAEI;QAAA,qEAAI;QAAA,0FAA+B;QAAA,4DAAK;QAAA,gEAExC;QAAA,qEACI;QAAA,4GAAmC;QAGvC,4DAAK;QAET,4DAAM;;QALM,0DAA8B;QAA9B,gFAA8B;;6FDO7B,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;;;;;;;;;;;;ICOxD,4EAA2E;IAAA,6EAAkB;IAAA,4DAAY;;;IACzG,4EAAwE;IAAA,6EAAkB;IAAA,4DAAY;;;IAMtG,4EAAiF;IAAA,gFAAqB;IAAA,4DAAY;;;IASlH,4EAAuD;IAAA,+EAAoB;IAAA,4DAAY;;ADf5F,MAAM,cAAc;IAKzB,YAAoB,YAAyB,EAAU,EAAc,EAAU,KAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,OAAE,GAAF,EAAE,CAAY;QAAU,UAAK,GAAL,KAAK,CAAY;QAFhG,aAAQ,GAAW,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAE8C,CAAC;IAErG,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IAEL,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,eAAe,EAAC,EAAE;YACnL,cAAc,CAAC,KAAK,GAAG,eAAe,CAAC;YACvC,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE;gBACnD,KAAK,eAAe;oBAClB,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;oBAC5C,MAAM;gBAER,KAAK,SAAS;oBACZ,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;oBAC9C,MAAM;gBAER,KAAK,UAAU;oBACb,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;oBAC/C,MAAM;gBAER;oBACE,MAAM;aACT;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACzD,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC1B,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2CAA2C,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YAC9D,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC;YAClC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC1B,CAAC,EAAE,CAAC,GAAG,EAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,EAAE;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;;4EA5DU,cAAc;8FAAd,cAAc;QCV3B,sEAEI;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAAA,gEAEd;QAAA,0EAEI;QAAA,iFACI;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEACA;QAAA,sHAA2E;QAC3E,wHAAwE;QAC5E,4DAAiB;QAAA,iEAEjB;QAAA,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,wHAAiF;QACrF,4DAAiB;QAAA,iEAEjB;QAAA,kFACI;QAAA,iFACI;QAAA,iFAAkC;QAAA,yEAAa;QAAA,4DAAa;QAC5D,iFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,iFAA6B;QAAA,oEAAQ;QAAA,4DAAa;QACtD,4DAAa;QACb,wHAAuD;QAC3D,4DAAiB;QAAA,iEAEjB;QAAA,6EAAmE;QAAhD,uIAAS,WAAO,IAAC;QAA+B,iEAAK;QAAA,4DAAS;QACjF,6EAAsC;QAAnB,uIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAEzD,4DAAO;QAAA,iEAAK;QAAA,iEAEhB;QAAA,4DAAM;;QA7BI,0DAAuB;QAAvB,oFAAuB;QAKV,0DAA+D;QAA/D,4KAA+D;QAC/D,0DAA4D;QAA5D,yKAA4D;QAM5D,0DAAqE;QAArE,qLAAqE;QASrE,2DAA2C;QAA3C,uJAA2C;QAGrB,0DAA6B;QAA7B,0FAA6B;;6FDlB7D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAO,MAAM,OAAO;IAEhB,YAAmB,SAAgB,EAAS,IAAW,EAAS,YAAmB,EAAS,eAAsB;QAA/F,cAAS,GAAT,SAAS,CAAO;QAAS,SAAI,GAAJ,IAAI,CAAO;QAAS,iBAAY,GAAZ,YAAY,CAAO;QAAS,oBAAe,GAAf,eAAe,CAAO;IAAE,CAAC;CAExH;;;;;;;;;;;;;ACDD;AAAA;AAAO,MAAM,MAAM;IAEf,YAAmB,QAAe,EAAS,QAAqB,EAAS,KAAY,EAAS,WAAkB,EAAS,SAAc,EAAS,OAAY,EAChJ,MAAa,EAAS,KAAY,EAAS,KAAY;QADhD,aAAQ,GAAR,QAAQ,CAAO;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,UAAK,GAAL,KAAK,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAO;QAAS,cAAS,GAAT,SAAS,CAAK;QAAS,YAAO,GAAP,OAAO,CAAK;QAChJ,WAAM,GAAN,MAAM,CAAO;QAAS,UAAK,GAAL,KAAK,CAAO;QAAS,UAAK,GAAL,KAAK,CAAO;IAAE,CAAC;CAEzE;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,QAAQ;IAEjB,YAAmB,UAAiB,EAAS,SAAgB,EAAS,QAAe,EAAS,aAAoB,EAAS,gBAAuB;QAA/H,eAAU,GAAV,UAAU,CAAO;QAAS,cAAS,GAAT,SAAS,CAAO;QAAS,aAAQ,GAAR,QAAQ,CAAO;QAAS,kBAAa,GAAb,aAAa,CAAO;QAAS,qBAAgB,GAAhB,gBAAgB,CAAO;IAAE,CAAC;CAExJ;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,YAAY;IAEvB,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAE1C,aAAa,CAAC,KAAY,EAAE,OAAe;QACzC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAU,6CAA6C,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;IACnG,CAAC;IAED,aAAa,CAAC,KAAY,EAAE,OAAe;QACzC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAU,6CAA6C,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC;IAClG,CAAC;IAED,aAAa,CAAC,KAAY,EAAE,EAAS;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,6CAA6C,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACtH,CAAC;IAED,eAAe,CAAC,KAAY;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAY,iDAAiD,GAAG,KAAK,CAAC,CAAC;IAC/F,CAAC;IAED,aAAa,CAAC,KAAY,EAAE,EAAS;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAU,+CAA+C,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IACtG,CAAC;IAED,cAAc,CAAC,KAAY,EAAE,QAAiB;QAC5C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAW,8CAA8C,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;IACtG,CAAC;IAED,cAAc,CAAC,KAAY,EAAE,QAAiB;QAC5C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,8CAA8C,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;IACrG,CAAC;IAED,cAAc,CAAC,KAAY,EAAE,EAAS;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,8CAA8C,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACvH,CAAC;IAED,eAAe,CAAC,KAAY;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAa,iDAAiD,GAAG,KAAK,CAAC,CAAC;IAChG,CAAC;IAED,cAAc,CAAC,KAAY,EAAE,EAAS;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,gDAAgD,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IACxG,CAAC;;wEA1CU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAA2C;;;AAWpC,MAAM,cAAc;IAEzB,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAE1C,YAAY,CAAC,KAAY,EAAE,MAAa;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAS,8CAA8C,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC;IAClG,CAAC;IAED,YAAY,CAAC,KAAY,EAAE,MAAa;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAS,8CAA8C,GAAG,KAAK,EAAE,MAAM,CAAE,CAAC;IAClG,CAAC;IAED,YAAY,CAAC,KAAY,EAAE,EAAS;QAClC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,8CAA8C,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACvH,CAAC;IAED,cAAc,CAAC,KAAY;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,iDAAiD,GAAG,KAAK,CAAC,CAAC;IAC9F,CAAC;IAED,aAAa,CAAC,KAAY,EAAE,EAAS;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAS,gDAAgD,GAAG,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IACtG,CAAC;IAED,wBAAwB,CAAC,KAAY,EAAE,QAAqB;QAC1D,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,0DAA0D,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IACxH,CAAC;IAED,qBAAqB,CAAC,KAAY,EAAE,KAAY;QAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,uDAAuD,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IAClH,CAAC;IAED,cAAc,CAAC,KAAY;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAU,qCAAqC,GAAG,KAAK,CAAC,CAAC;IACjF,CAAC;;4EAlCU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,mBAAmB;IAE9B,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAE1C,aAAa;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,4BAA4B,CAAC,CAAC;IACjE,CAAC;;sFANU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;;;AASpC,MAAM,eAAe;IAE1B,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAE1C,cAAc,CAAC,KAAY,EAAE,MAAa;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAS,0CAA0C,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9F,CAAC;IAED,mBAAmB,CAAC,KAAY;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,kDAAkD,GAAG,KAAK,CAAC,CAAC;IAC/F,CAAC;IAED,6BAA6B,CAAC,KAAY,EAAE,QAAqB;QAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,2DAA2D,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IACzH,CAAC;IAED,0BAA0B,CAAC,KAAY,EAAE,KAAY;QACnD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,wDAAwD,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;IACnH,CAAC;IAED,eAAe,CAAC,KAAY;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAW,sCAAsC,GAAG,KAAK,CAAC,CAAC;IACnF,CAAC;;8EAtBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,YAAY;IAEvB,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAE1C,KAAK,CAAC,KAAY,EAAE,QAAe,EAAE,UAAqB;QACxD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,GAAG,KAAK,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,UAAU,EAAE,IAAI,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,CAAC,CAAC;IACnI,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,GAAG,KAAK,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACjG,CAAC;;wEAVU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CompanyComponent } from './components/company/company.component';\nimport { CustomerComponent } from './components/customer/customer.component';\n\n\nconst routes: Routes = [\n  {path: \"home\", component: HomepageComponent},\n  {path: \"login\", component: LoginComponent},\n  {path: \"admin\", component: AdminComponent},\n  {path: \"company\", component: CompanyComponent},\n  {path: \"customer\", component: CustomerComponent},\n  {path: \"\", redirectTo: \"home\", pathMatch: \"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CouponProject';\n\n  userType: string = sessionStorage.getItem('userType');\n  admin: boolean = false;\n  company: boolean = false;\n  customer: boolean = false;\n\n  constructor(){}\n\n  ngOnInit(): void {\n    this.checkUser()\n  }\n\n  public checkUser() {\n    this.userType = sessionStorage.getItem('userType')\n    switch (this.userType) {\n      case 'admin':\n        this.admin = true\n        break;\n\n      case 'company':\n        this.company = true\n        break;\n\n      case 'customer':\n        this.customer = true\n        break;\n\n      default:\n        this.admin = false;\n        this.company = false;\n        this.customer = false;\n        break;\n    }\n  }\n\n}\n","<div>\n\n  <mat-toolbar color=\"primary\">\n\n    <mat-icon>shopping_cart</mat-icon> &nbsp;Scam Emporium\n    &nbsp;&nbsp;<a routerLink=\"home\">Coupons</a>\n    &nbsp;&nbsp;<a routerLink=\"admin\" *ngIf=\"admin === true\">Admin Controls</a>\n    &nbsp;&nbsp;<a routerLink=\"company\" *ngIf=\"company === true\">Company Controls</a>\n    &nbsp;&nbsp;<a routerLink=\"customer\" *ngIf=\"customer === true\">Customer Controls</a>\n    <span class=\"toolbar-fill\"></span>\n\n    <mat-menu #appMenu=\"matMenu\">\n      <a routerLink=\"login\" mat-menu-item>Login / Logout</a>\n    </mat-menu>\n\n    <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n      <mat-icon>login</mat-icon>\n    </button>\n\n  </mat-toolbar>\n\n  <main>\n\n    <router-outlet></router-outlet>\n    \n  </main>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { CompanyComponent } from './components/company/company.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    LoginComponent,\n    CompanyComponent,\n    CustomerComponent,\n    AdminComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatSnackBarModule,\n    MatSelectModule,\n    MatSlideToggleModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/service/admin.service';\nimport { Company } from 'src/app/model/company';\nimport { Customer } from 'src/app/model/customer';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  // OUR FORMS\n  createCompanyForm: FormGroup;\n  createCustomerForm: FormGroup;\n  updateCompanyForm: FormGroup;\n  updateCustomerForm: FormGroup;\n  findOneCus: FormGroup;\n  findOneCom: FormGroup;\n\n  // OBJECTS WE USE\n  company: Company;\n  customer: Customer;\n  oneCompany: Company;\n  oneCustomer: Customer;\n\n  // USED FOR GENERATING ALL CUSTOMERS + COMPANIES\n  companies: Company[];\n  customers: Customer[];\n\n  // BOOLEANS TO OPEN AN UPDATE WINDOW\n  updateCus: Boolean = false;\n  updateCom: Boolean = false;\n\n  constructor(private adminService:AdminService, private fb:FormBuilder, private snack:MatSnackBar) { }\n\n  ngOnInit(): void {\n    // COMPANY CREATION\n    this.createCompanyForm = this.fb.group({\n      name: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      companyPassword: ['', [Validators.required, Validators.maxLength(12)]]\n    });\n\n    // CUSTOMER CREATION\n    this.createCustomerForm = this.fb.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      customerEmail: ['', [Validators.required, Validators.email]],\n      customerPassword: ['', [Validators.required, Validators.maxLength(12)]]\n    });\n\n    // FORM TO FIND A SINGLE COMPANY OR CUSTOMER BASED ON ID - GET ID FROM FORM\n    this.findOneCom = this.fb.group({\n      companyId: ['', Validators.required]\n    });\n\n    this.findOneCus = this.fb.group({\n      customerId: ['', Validators.required]\n    });\n\n    // FORM TO UPDATE COMPANY\n    this.updateCompanyForm = this.fb.group({\n      nameUpdate: ['', Validators.required],\n      companyUpEmail: ['' , [Validators.required, Validators.email]],\n      companyUpPassword: ['' , [Validators.required, Validators.maxLength(12)]]\n    });\n\n    // FORM TO UPDATE CUSTOMER\n    this.updateCustomerForm = this.fb.group({\n      fNameUpdate: ['', Validators.required],\n      lNameUpdate: ['', Validators.required],\n      customerUpEmail: ['', [Validators.required, Validators.email]],\n      customerUpPassword: ['', [Validators.required, Validators.maxLength(12)]]\n    });\n\n    // GET ALL COMPANIES TO SHOW THE ADMIN ON LOAD\n    this.adminService.getAllCompanies(sessionStorage.token).subscribe((companies)=>{\n      this.companies = companies;\n    });\n\n    // GET ALL CUSTOMER TO SHOW THE ADMIN ON LOAD\n    this.adminService.getAllCustomers(sessionStorage.token).subscribe((customers)=>{\n      this.customers = customers;\n    });\n\n  }\n\n  // COPANY CREATION - RECEIVE DETAILS FROM CREATE COMPANY FORM\n  public addNewCompany() {\n    const company:Company = new Company(0, this.createCompanyForm.controls['name'].value, this.createCompanyForm.controls['companyEmail'].value, this.createCompanyForm.controls['companyPassword'].value);\n    this.adminService.createCompany(sessionStorage.token, company).subscribe( (company)=>{\n      this.snack.open(\"Company added sucessfully, ID: \" + company.companyId, \"\", {duration:2000})\n      this.ngOnInit();\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // CUSTOMER CREATION - RECEIVE DETAILS FROM CREATE CUSTOMER FORM\n  public addNewCustomer() {\n    const customer:Customer = new Customer(0, this.createCustomerForm.controls['fName'].value, this.createCustomerForm.controls['lName'].value, this.createCustomerForm.controls['customerEmail'].value, this.createCustomerForm.controls['customerPassword'].value);\n    this.adminService.createCustomer(sessionStorage.token, customer).subscribe( (customer)=>{\n      this.snack.open(\"Customer added sucessfully, ID: \" + customer.customerId, \"\", {duration:2000})\n      this.ngOnInit();\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // SEND COMPANY TO UPDATE - SEND WITH COMPANY DEFAULT VALUES THEN CHANGE WHAT WE NEED WHILE SAVING THE REST AS IS\n  public updateComOpen(company:Company) {\n    this.updateCom = true; // OPEN UPDATE FORM\n    this.company = company;\n    this.updateCompanyForm.controls['nameUpdate'].setValue(company.name);\n    this.updateCompanyForm.controls['companyUpEmail'].setValue(company.companyEmail);\n    this.updateCompanyForm.controls['companyUpPassword'].setValue(company.companyPassword);\n  }\n\n   // CANCEL BUTTON TO CLOSE UPDATE FORM WITHOUT UPDATING\n   public updateComClose() {\n    this.updateCom = false;\n  }\n\n  // ACTUAL UPDATE + FORM TO CHANGE WHAT WE NEED TO UPDATE - WHAT WE DONT CHANGE KEEPS DEFAULT VALUES ^^^\n  public updateCompany() {\n    this.company.name = this.updateCompanyForm.controls['nameUpdate'].value;\n    this.company.companyEmail = this.updateCompanyForm.controls['companyUpEmail'].value;\n    this.company.companyPassword = this.updateCompanyForm.controls['companyUpPassword'].value;\n    this.adminService.updateCompany(sessionStorage.token, this.company).subscribe((company)=>{\n      this.snack.open(\"Company updated successfully\", \"\", {duration:2000})\n      this.ngOnInit();\n      this.updateCom = false;\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // SEND CUSTOMER TO UPDATE - SEND WITH CUSTOMER DEFAULT VALUES THEN CHANGE WHAT WE NEED WHILE SAVING THE REST AS IS\n  public updateCusOpen(customer:Customer) {\n    this.updateCus = true; // OPEN UPDATE FORM\n    this.customer = customer;\n    this.updateCustomerForm.controls['fNameUpdate'].setValue(customer.firstName);\n    this.updateCustomerForm.controls['lNameUpdate'].setValue(customer.lastName);\n    this.updateCustomerForm.controls['customerUpEmail'].setValue(customer.customerEmail);\n    this.updateCustomerForm.controls['customerUpPassword'].setValue(customer.customerPassword);\n  }\n\n  // CANCEL BUTTON TO CLOSE UPDATE FORM WITHOUT UPDATING\n  public updateCusClose() {\n    this.updateCus = false;\n  }\n\n  // ACTUAL UPDATE + FORM TO CHANGE WHAT WE NEED TO UPDATE - WHAT WE DONT CHANGE KEEPS DEFAULT VALUES ^^^\n  public updateCustomer() {\n    this.customer.firstName = this.updateCustomerForm.controls['fNameUpdate'].value;\n    this.customer.lastName = this.updateCustomerForm.controls['lNameUpdate'].value;\n    this.customer.customerEmail = this.updateCustomerForm.controls['customerUpEmail'].value;\n    this.customer.customerPassword = this.updateCustomerForm.controls['customerUpPassword'].value;\n    this.adminService.updateCustomer(sessionStorage.token, this.customer).subscribe((customer)=>{\n      this.snack.open(\"Customer updated successfully\", \"\", {duration:2000})\n      this.ngOnInit();\n      this.updateCus = false;\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // DELETE COMPANY BASED ON ID\n  public deleteCompany(id) {\n    this.adminService.deleteCompany(sessionStorage.token, id).subscribe((response)=>{\n      this.snack.open(response, \"\", {duration:2000})\n      this.ngOnInit();\n    }, (err)=>{\n      console.log(err);\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // DELETE CUSTOMER BASED ON ID\n  public deleteCustomer(id) {\n    this.adminService.deleteCustomer(sessionStorage.token, id).subscribe((response)=>{\n      this.snack.open(response, \"\", {duration:2000})\n      this.ngOnInit();\n    }, (err)=>{\n      console.log(err);\n      this.snack.open(err, \"\", {duration:2000})\n    });\n\n  }\n\n  // GET ONE COMPANY BASED ON ID - USES FIND ONE FORM\n  public getOneCompany() {\n    this.adminService.getOneCompany(sessionStorage.token, this.findOneCom.controls['companyId'].value).subscribe((company)=>{\n      this.oneCompany = company;\n      this.findOneCom.controls['companyId'].setValue(\"\");\n    }, (err)=>{\n      console.log(err)\n      this.findOneCom.controls['companyId'].setValue(\"\");\n    });\n  }\n\n  // GET ONE CUSTOMER BASED ON ID - USES FIND ONE FORM\n  public getOneCustomer() {\n    this.adminService.getOneCustomer(sessionStorage.token, this.findOneCus.controls['customerId'].value).subscribe((customer)=>{\n      this.oneCustomer = customer;\n      this.findOneCus.controls['customerId'].setValue(\"\");\n    }, (err)=>{\n      console.log(err)\n      this.findOneCus.controls['customerId'].setValue(\"\");\n    });\n  }\n\n  // IF WE WANT TO REFRESH THE LIST OF ALL COMPANIES WITHOUT RELOADING THE PAGE\n  public getAllCompanies() {\n    this.adminService.getAllCompanies(sessionStorage.token).subscribe((companies)=>{\n      this.companies = companies;\n    });\n  }\n\n  // IF WE WANT TO REFRESH THE LIST OF ALL CUSTOMER WITHOUT RELOADING THE PAGE\n  public getAllCustomers() {\n    this.adminService.getAllCustomers(sessionStorage.token).subscribe((customers)=>{\n      this.customers = customers;\n    });\n  }\n\n  public cComForm() {\n    return this.createCompanyForm.controls;\n  }\n\n  public cCusForm() {\n    return this.createCustomerForm.controls;\n  }\n\n  public uComForm() {\n    return this.updateCompanyForm.controls;\n  }\n\n  public uCusForm() {\n    return this.updateCustomerForm.controls;\n  }\n\n  public fCom() {\n    return this.findOneCom.controls;\n  }\n\n  public fCus() {\n    return this.findOneCus.controls;\n  }\n\n}\n","<div>\n\n    <form [formGroup]=\"createCompanyForm\"> <!-- CREATE NEW COMPANY FORM - EVERYTHING IS REQUIRED + EMAIL AND PASSWORD LENGTH (MAXIMUM 12) VALIDATION -->\n        <h1>Create company:</h1>\n        <mat-form-field>\n            <mat-label>Company name</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter company name...\" formControlName=\"name\"/>\n            <mat-error *ngIf=\"cComForm()['name'].errors?.required && cComForm()['name'].touched\">Company name is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Company email</mat-label>\n            <input type=\"email\" matInput placeholder=\"Enter company email...\" formControlName=\"companyEmail\"/>\n            <mat-error *ngIf=\"cComForm()['companyEmail'].errors?.required && cComForm()['companyEmail'].touched\">Company email is required!</mat-error>\n            <mat-error *ngIf=\"cComForm()['companyEmail'].errors?.email && cComForm()['companyEmail'].touched\">Invalid email!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Company password</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter company password...\" formControlName=\"companyPassword\"/>\n            <mat-error *ngIf=\"cComForm()['companyPassword'].errors?.required && cComForm()['companyPassword'].touched\">Company password is required!</mat-error>\n            <mat-error *ngIf=\"cComForm()['companyPassword'].errors?.maxlength && cComForm()['companyPassword'].touched\">Maximum password length is 12 characters!</mat-error>\n        </mat-form-field><br/><br/>\n        <button mat-raised-button (click)=\"addNewCompany()\" [disabled]=\"!createCompanyForm.valid\">Add Company</button>\n    </form><br/>\n\n    <form [formGroup]=\"createCustomerForm\"> <!-- CREATE NEW CUSTOMER FORM - EVERYTHING IS REQUIRED-->\n        <h1>Create customer:</h1>\n        <mat-form-field>\n            <mat-label>Customer first name</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter first name...\" formControlName=\"fName\"/>\n            <mat-error *ngIf=\"cCusForm()['fName'].errors?.required && cCusForm()['fName'].touched\">First name is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Customer last name</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter last name...\" formControlName=\"lName\"/>\n            <mat-error *ngIf=\"cCusForm()['lName'].errors?.required && cCusForm()['lName'].touched\">Last name is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Customer email</mat-label>\n            <input type=\"email\" matInput placeholder=\"Enter customer email...\" formControlName=\"customerEmail\"/>\n            <mat-error *ngIf=\"cCusForm()['customerEmail'].errors?.required && cCusForm()['customerEmail'].touched\">Customer email is required!</mat-error>\n            <mat-error *ngIf=\"cCusForm()['customerEmail'].errors?.email && cCusForm()['customerEmail'].touched\">Invalid email!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Customer password</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter customer password...\" formControlName=\"customerPassword\"/>\n            <mat-error *ngIf=\"cCusForm()['customerPassword'].errors?.required && cCusForm()['customerPassword'].touched\">Customer password is required!</mat-error>\n            <mat-error *ngIf=\"cCusForm()['customerPassword'].errors?.maxlength && cCusForm()['customerPassword'].touched\">Maximum password length is 12 characters!</mat-error>\n        </mat-form-field><br/><br/>\n        <button mat-raised-button (click)=\"addNewCustomer()\" [disabled]=\"!createCustomerForm.valid\">Add Customer</button>\n    </form><br/>\n\n    <form [formGroup]=\"findOneCom\"> <!-- FORM TO FIND A SINGLE COMPANY OR CUSTOMER BASED ON ID -->\n        <h1>Find one company or customer:</h1>\n        <mat-form-field>\n            <mat-label>Company ID</mat-label>\n            <input type=\"number\" matInput placeholder=\"Enter company ID...\" formControlName=\"companyId\"/>\n            <mat-error *ngIf=\"fCom()['companyId'].errors?.required && fCom()['companyId'].touched\">Company ID required for a search!</mat-error>\n        </mat-form-field>\n        <button mat-raised-button (click)=\"getOneCompany()\" [disabled]=\"!findOneCom.valid\">🔍</button><span *ngIf=\"oneCompany\">ID: {{oneCompany.companyId}} | {{oneCompany.name}} | {{oneCompany.companyEmail}}, {{oneCompany.companyPassword}}</span>\n    </form><br/>\n\n    <form [formGroup]=\"findOneCus\">\n        <mat-form-field>\n            <mat-label>Customer ID</mat-label>\n            <input type=\"number\" matInput placeholder=\"Enter customer ID...\" formControlName=\"customerId\"/>\n            <mat-error *ngIf=\"fCus()['customerId'].errors?.required && fCus()['customerId'].touched\">Customer ID is required for a search!</mat-error>\n        </mat-form-field>\n        <button mat-raised-button (click)=\"getOneCustomer()\" [disabled]=\"!findOneCus.valid\">🔍</button><span *ngIf=\"oneCustomer\">ID: {{oneCustomer.customerId}} | {{oneCustomer.firstName}} {{oneCustomer.lastName}} | {{oneCustomer.customerEmail}}, {{oneCustomer.customerPassword}}</span>\n    </form><br/>\n\n    <h1>All companies:</h1><button mat-raised-button (click)=\"getAllCompanies()\">Refresh</button> <!-- REFRESH BUTTON EVEN IF WE USE NGONINIT -->\n    <ul>\n        <li *ngFor=\"let company of companies\">ID: {{company.companyId}} | {{company.name}} | {{company.companyEmail}}, {{company.companyPassword}}\n            <button mat-raised-button (click)=\"updateComOpen(company)\">Update</button> <!-- OPEN THE UPDATE FORM AND SEND DEFAULT VALUES  -->\n            <button mat-raised-button (click)=\"deleteCompany(company.companyId)\">Delete</button> <!-- DELETE COMPANY -->\n        </li>\n    </ul><br/>\n    <form [formGroup]=\"updateCompanyForm\" *ngIf=\"updateCom === true\"> <!-- UPDATE FORM ONLY OPENS WHEN YOU CLICK UPDATE ABOVE ^^^ -->\n        <mat-form-field>\n            <mat-label>Update name</mat-label>\n            <input type=\"text\" matInput placeholder=\"Update company name...\" formControlName=\"nameUpdate\"/>\n            <mat-error *ngIf=\"uComForm()['nameUpdate'].errors?.required && uComForm()['nameUpdate'].touched\">Company name is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Update email</mat-label>\n            <input type=\"email\" matInput placeholder=\"Update company email...\" formControlName=\"companyUpEmail\"/>\n            <mat-error *ngIf=\"uComForm()['companyUpEmail'].errors?.required && uComForm()['companyUpEmail'].touched\">Company email is required!</mat-error>\n            <mat-error *ngIf=\"uComForm()['companyUpEmail'].errors?.email && uComForm()['companyUpEmail'].touched\">Invalid email!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Update password</mat-label>\n            <input type=\"text\" matInput placeholder=\"Update company password...\" formControlName=\"companyUpPassword\"/>\n            <mat-error *ngIf=\"uComForm()['companyUpPassword'].errors?.required && uComForm()['companyUpPassword'].touched\">Company password is required!</mat-error>\n            <mat-error *ngIf=\"uComForm()['companyUpPassword'].errors?.maxlength && uComForm()['companyUpPassword'].touched\">Maximum password length is 12 characters!</mat-error>\n        </mat-form-field><br/><br/>\n        <button mat-raised-button (click)=\"updateCompany()\" [disabled]=\"!updateCompanyForm.valid\">Update</button><button mat-raised-button (click)=\"updateComClose()\">Cancel</button>\n    </form><br/>\n\n    <h1>All customers</h1><button mat-raised-button (click)=\"getAllCustomers()\">Refresh</button> <!-- REFRESH BUTTON EVEN IF WE USE NGONINIT -->\n    <ul>\n        <li *ngFor=\"let customer of customers\">ID: {{customer.customerId}} | {{customer.firstName}} {{customer.lastName}} | {{customer.customerEmail}}, {{customer.customerPassword}}\n            <button mat-raised-button (click)=\"updateCusOpen(customer)\">Update</button> <!-- OPEN THE UPDATE FORM AND SEND DEFAULT VALUES  -->\n            <button mat-raised-button (click)=\"deleteCustomer(customer.customerId)\">Delete</button> <!-- DELETE CUSTOMER -->\n        </li>\n    </ul><br/>\n    <form [formGroup]=\"updateCustomerForm\" *ngIf=\"updateCus === true\"> <!-- UPDATE FORM ONLY OPENS WHEN YOU CLICK UPDATE ABOVE ^^^ -->\n        <mat-form-field>\n            <mat-label>Update first name</mat-label>\n            <input type=\"text\" matInput placeholder=\"Update first name...\" formControlName=\"fNameUpdate\"/>\n            <mat-error *ngIf=\"uCusForm()['fNameUpdate'].errors?.required && uCusForm()['fNameUpdate'].touched\">First name is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Update last name</mat-label>\n            <input type=\"text\" matInput placeholder=\"Update last name...\" formControlName=\"lNameUpdate\"/>\n            <mat-error *ngIf=\"uCusForm()['lNameUpdate'].errors?.required && uCusForm()['lNameUpdate'].touched\">Last name is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Update email</mat-label>\n            <input type=\"email\" matInput placeholder=\"Update customer email...\" formControlName=\"customerUpEmail\"/>\n            <mat-error *ngIf=\"uCusForm()['customerUpEmail'].errors?.required && uCusForm()['customerUpEmail'].touched\">Customer email is required!</mat-error>\n            <mat-error *ngIf=\"uCusForm()['customerUpEmail'].errors?.email && uCusForm()['customerUpEmail'].touched\">Invalid email!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Update password</mat-label>\n            <input type=\"text\" matInput placeholder=\"Update customer password...\" formControlName=\"customerUpPassword\"/>\n            <mat-error *ngIf=\"uCusForm()['customerUpPassword'].errors?.required && uCusForm()['customerUpPassword'].touched\">Customer password is required!</mat-error>\n            <mat-error *ngIf=\"uCusForm()['customerUpPassword'].errors?.maxlength && uCusForm()['customerUpPassword'].touched\">Maximum password length is 12 characters!</mat-error>\n        </mat-form-field><br/><br/>\n        <button mat-raised-button (click)=\"updateCustomer()\" [disabled]=\"!updateCustomerForm.valid\">Update</button><button mat-raised-button (click)=\"updateCusClose()\">Cancel</button>\n    </form><br/>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { CompanyService } from 'src/app/service/company.service';\nimport { Coupon } from 'src/app/model/coupon';\nimport { Company } from 'src/app/model/company';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  // OUR FORMS\n  createCouponForm: FormGroup;\n  updateCouponForm: FormGroup;\n  findOneForm: FormGroup;\n  categoryFilter: FormControl;\n  priceFilter: FormControl;\n  maxPrice: FormControl;\n  categoryType: FormControl;\n\n  // OBJECTS WE USE\n  coupon: Coupon;\n  oneCoupon: Coupon;\n  updatedCoupon: Coupon;\n  company: Company;\n  coupons: Coupon[];\n  filterCoupons: Coupon[];\n\n  // BOOLEAN FOR OPENING UPDATE FORM\n  updateCou: Boolean = false;\n\n  constructor(private companyService:CompanyService, private fb:FormBuilder, private snack:MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.createCouponForm = this.fb.group({\n      category: ['', Validators.required],\n      title: ['', [Validators.required, Validators.maxLength(100)]],\n      description: ['', [Validators.required, Validators.maxLength(200)]],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(1)]],\n      price: ['', [Validators.required, Validators.min(1)]],\n      image: ['', Validators.required]\n    });\n\n    this.updateCouponForm = this.fb.group({\n      categoryUp: ['', Validators.required],\n      titleUp: ['', [Validators.required, Validators.maxLength(100)]],\n      descriptionUp: ['', [Validators.required, Validators.maxLength(200)]],\n      startDateUp: ['', Validators.required],\n      endDateUp: ['', Validators.required],\n      amountUp: ['', [Validators.required, Validators.min(1)]],\n      priceUp: ['', [Validators.required, Validators.min(1)]],\n      imageUp: ['', Validators.required]\n    });\n\n    this.findOneForm = this.fb.group({\n      couponId: ['', Validators.required]\n    });\n\n    // CONTROLS FOR FILTERING COUPONS\n    this.categoryFilter = new FormControl(\"\");\n    this.priceFilter = new FormControl(\"\");\n    this.maxPrice = new FormControl(\"\");\n    this.categoryType = new FormControl(\"\");\n\n    // LOAD COUPONS ON FIRST VISIT\n    this.companyService.findAllCoupons(sessionStorage.token).subscribe((coupons)=>{\n      this.coupons = coupons;\n    });\n  }\n\n  // COUPON CREATION\n  public createCoupon() {\n    const coupon:Coupon = new Coupon(0, this.createCouponForm.controls['category'].value, this.createCouponForm.controls['title'].value, this.createCouponForm.controls['description'].value,\n    this.createCouponForm.controls['startDate'].value, this.createCouponForm.controls['endDate'].value, this.createCouponForm.controls['amount'].value,\n    this.createCouponForm.controls['price'].value, this.createCouponForm.controls['image'].value);\n    this.companyService.createCoupon(sessionStorage.token, coupon).subscribe((coupon)=>{\n      this.snack.open(\"Coupon created sucessfully, ID: \" + coupon.couponId, \"\", {duration:2000})\n      this.ngOnInit();\n    }, (err)=>{\n      console.log(err);\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // SEND COUPON TO UPDATE - SEND WITH COUPON DEFAULT VALUES THEN CHANGE WHAT WE NEED WHILE SAVING THE REST AS IS\n  public openCouponUpdate(coupon:Coupon) {\n    this.updateCou = true;\n    this.coupon = coupon;\n    this.updateCouponForm.controls['categoryUp'].setValue(coupon.category);\n    this.updateCouponForm.controls['titleUp'].setValue(coupon.title);\n    this.updateCouponForm.controls['descriptionUp'].setValue(coupon.description);\n    this.updateCouponForm.controls['startDateUp'].setValue(coupon.startDate);\n    this.updateCouponForm.controls['endDateUp'].setValue(coupon.endDate);\n    this.updateCouponForm.controls['amountUp'].setValue(coupon.amount);\n    this.updateCouponForm.controls['priceUp'].setValue(coupon.price);\n    this.updateCouponForm.controls['imageUp'].setValue(coupon.image);\n  }\n\n  // CLOSE UPDATE FORM WITHOUT UPDATING\n  public closeCouponUpdate() {\n    this.updateCou = false;\n  }\n\n  // ACTUAL UPDATE + FORM TO CHANGE WHAT WE NEED TO UPDATE - WHAT WE DONT CHANGE KEEPS DEFAULT VALUES ^^^\n  public updateCoupon() {\n    this.coupon.category = this.updateCouponForm.controls['categoryUp'].value;\n    this.coupon.title = this.updateCouponForm.controls['titleUp'].value;\n    this.coupon.description = this.updateCouponForm.controls['descriptionUp'].value;\n    this.coupon.startDate = this.updateCouponForm.controls['startDateUp'].value;\n    this.coupon.endDate = this.updateCouponForm.controls['endDateUp'].value;\n    this.coupon.amount = this.updateCouponForm.controls['amountUp'].value;\n    this.coupon.price = this.updateCouponForm.controls['priceUp'].value;\n    this.coupon.image = this.updateCouponForm.controls['imageUp'].value;\n    this.companyService.updateCoupon(sessionStorage.token, this.coupon).subscribe((result)=>{\n      this.snack.open(\"Coupon updated sucessfully\", \"\", {duration:2000})\n      this.ngOnInit();\n      this.updateCou = false;\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  // DELETE COUPON BASED ON ID\n  public deleteCoupon(id) {\n    this.companyService.deleteCoupon(sessionStorage.token, id).subscribe((response)=>{\n      this.snack.open(response, \"\", {duration:2000})\n      this.ngOnInit();\n    }, (err)=>{\n      console.log(err);\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  public getOneCoupon() {\n    this.companyService.findOneCoupon(sessionStorage.token, this.findOneForm.controls['couponId'].value).subscribe((coupon)=>{\n      this.oneCoupon = coupon;\n      this.findOneForm.controls['couponId'].setValue(\"\");\n    }, (err)=>{\n      this.findOneForm.controls['couponId'].setValue(\"\");\n      console.log(err)\n    });\n  }\n\n  public findAllCoupons() {\n    this.companyService.findAllCoupons(sessionStorage.token).subscribe((coupons)=>{\n      this.coupons = coupons;\n    });\n  }\n\n  // FILTER BY MAX PRICE \n  public getCouponsByMaxPrice() {\n    this.companyService.findAllCouponsByPrice(sessionStorage.token, this.maxPrice.value).subscribe((result)=>{\n      this.filterCoupons = result;\n    });\n  }\n\n  // FILTER BY CATEGORY\n  public getCouponsByCategory() {\n    this.companyService.findAllCouponsByCategory(sessionStorage.token, this.categoryType.value).subscribe((result)=>{\n      this.filterCoupons = result;\n    });\n  }\n\n  // SHOW LOGGED IN COMPANY DETAILS\n  public showDetails() {\n    this.companyService.companyDetails(sessionStorage.token).subscribe((company)=>{\n      this.company = company;\n    }, (err)=>{\n      console.log(err)\n    });\n  }\n\n  public cCouForm() {\n    return this.createCouponForm.controls;\n  }\n\n  public uCouForm() {\n    return this.updateCouponForm.controls;\n  }\n\n}\n","<div>\n\n    <span>\n     <button mat-raised-button (click)=\"showDetails()\">Your information</button>\n     <span *ngIf=\"company\">Your ID: {{company.companyId}} | Company name: {{company.name}} | Email: {{company.companyEmail}} | Password: {{company.companyPassword}}</span>\n    </span><br/><br/>\n\n    <form [formGroup]=\"createCouponForm\">\n        <h1>Create coupon:</h1>\n        <mat-form-field>\n          <mat-select formControlName=\"category\" placeholder=\"Category\">\n              <mat-option value=\"Restaurants\">Restaurants</mat-option>\n              <mat-option value=\"Vacation\">Vacation</mat-option>\n              <mat-option value=\"Electronics\">Electronics</mat-option>\n              <mat-option value=\"Clothing\">Clothing</mat-option>\n              <mat-option value=\"Entertainment\">Entertainment</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"cCouForm()['category'].errors?.required && cCouForm()['category'].touched\">Coupon category is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon title</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter coupon title...\" formControlName=\"title\"/>\n            <mat-error *ngIf=\"cCouForm()['title'].errors?.required && cCouForm()['title'].touched\">Coupon title is required!</mat-error>\n            <mat-error *ngIf=\"cCouForm()['title'].errors?.maxlength && cCouForm()['title'].touched\">Maximum character length is 100!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon description</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter coupon description...\" formControlName=\"description\"/>\n            <mat-error *ngIf=\"cCouForm()['description'].errors?.required && cCouForm()['description'].touched\">Coupon description is required!</mat-error>\n            <mat-error *ngIf=\"cCouForm()['description'].errors?.maxlength && cCouForm()['description'].touched\">Maximum character length is 200!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon start date</mat-label>\n            <input type=\"date\" matInput placeholder=\"Enter coupon start date...\" formControlName=\"startDate\"/>\n            <mat-error *ngIf=\"cCouForm()['startDate'].errors?.required && cCouForm()['startDate'].touched\">Coupon start date is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon end date</mat-label>\n            <input type=\"date\" matInput placeholder=\"Enter coupon end date...\" formControlName=\"endDate\"/>\n            <mat-error *ngIf=\"cCouForm()['endDate'].errors?.required && cCouForm()['endDate'].touched\">Coupon end date is required!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon amount</mat-label>\n            <input type=\"number\" matInput placeholder=\"Enter coupon amount..\" formControlName=\"amount\"/>\n            <mat-error *ngIf=\"cCouForm()['amount'].errors?.required && cCouForm()['amount'].touched\">Coupon amount is required!</mat-error>\n            <mat-error *ngIf=\"cCouForm()['amount'].errors?.min && cCouForm()['amount'].touched\">Minimum amount must be above 0!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon price</mat-label>\n            <input type=\"number\" matInput placeholder=\"Enter coupon price..\" formControlName=\"price\"/>\n            <mat-error *ngIf=\"cCouForm()['price'].errors?.required && cCouForm()['price'].touched\">Coupon price is required!</mat-error>\n            <mat-error *ngIf=\"cCouForm()['price'].errors?.min && cCouForm()['price'].touched\">Minimum price must be above 0!</mat-error>\n        </mat-form-field><br/>\n        <mat-form-field>\n            <mat-label>Coupon image</mat-label>\n            <input type=\"text\" matInput placeholder=\"Enter coupon image..\" formControlName=\"image\"/>\n            <mat-error *ngIf=\"cCouForm()['image'].errors?.required && cCouForm()['image'].touched\">Coupon image is required!</mat-error>\n        </mat-form-field><br/><br/>\n        <button mat-raised-button (click)=\"createCoupon()\" [disabled]=\"!createCouponForm.valid\">Add Coupon</button>\n    </form><br/>\n\n    <form [formGroup]=\"findOneForm\">\n        <h1>Find one coupon:</h1>\n        <mat-form-field>\n            <mat-label>Coupon ID</mat-label>\n            <input type=\"number\" matInput placeholder=\"Enter coupon ID...\" formControlName=\"couponId\"/>\n            <mat-error>Coupon ID is required for a search!</mat-error>\n        </mat-form-field>\n        <button mat-raised-button (click)=\"getOneCoupon()\" [disabled]=\"!findOneForm.valid\">🔍</button><span *ngIf=\"oneCoupon\">\n            ID: {{oneCoupon.couponId}} |  CAT: {{oneCoupon.category}}, TITLE: {{oneCoupon.title}}, DESC: {{oneCoupon.description}} | {{oneCoupon.startDate}} - {{oneCoupon.endDate}} | AMT: {{oneCoupon.amount}}, PRICE: {{oneCoupon.price}} | {{oneCoupon.image}}\n        </span>\n    </form><br/>\n\n    <h1>All of your coupons:</h1><input type=\"button\" value=\"Refresh\" (click)=\"findAllCoupons()\"/>\n    <ul>\n        <li *ngFor=\"let coupon of coupons\">ID: {{coupon.couponId}} |  CAT: {{coupon.category}}, TITLE: {{coupon.title}}, DESC: {{coupon.description}} | {{coupon.startDate}} - {{coupon.endDate}} | AMT: {{coupon.amount}}, PRICE: {{coupon.price}} | {{coupon.image}}\n            <button mat-raised-button (click)=\"openCouponUpdate(coupon)\">Update</button><button mat-raised-button (click)=\"deleteCoupon(coupon.couponId)\">Delete</button>\n        </li>\n    </ul><br/>\n    <form [formGroup]=\"updateCouponForm\" *ngIf=\"updateCou === true\">\n        <mat-form-field>\n            <mat-select formControlName=\"categoryUp\" placeholder=\"Category\">\n                <mat-option value=\"Restaurants\">Restaurants</mat-option>\n                <mat-option value=\"Vacation\">Vacation</mat-option>\n                <mat-option value=\"Electronics\">Electronics</mat-option>\n                <mat-option value=\"Clothing\">Clothing</mat-option>\n                <mat-option value=\"Entertainment\">Entertainment</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"uCouForm()['categoryUp'].errors?.required && uCouForm()['categoryUp'].touched\">Coupon category is required!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update title</mat-label>\n              <input type=\"text\" matInput placeholder=\"Update coupon title...\" formControlName=\"titleUp\"/>\n              <mat-error *ngIf=\"uCouForm()['titleUp'].errors?.required && uCouForm()['titleUp'].touched\">Coupon title is required!</mat-error>\n              <mat-error *ngIf=\"uCouForm()['titleUp'].errors?.maxlength && uCouForm()['titleUp'].touched\">Maximum character length is 100!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update description</mat-label>\n              <input type=\"text\" matInput placeholder=\"Update coupon description...\" formControlName=\"descriptionUp\"/>\n              <mat-error *ngIf=\"uCouForm()['descriptionUp'].errors?.required && uCouForm()['descriptionUp'].touched\">Coupon description is required!</mat-error>\n              <mat-error *ngIf=\"uCouForm()['descriptionUp'].errors?.maxlength && uCouForm()['descriptionUp'].touched\">Maximum character length is 200!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update start date</mat-label>\n              <input type=\"date\" matInput placeholder=\"Update coupon start date...\" formControlName=\"startDateUp\"/>\n              <mat-error *ngIf=\"uCouForm()['startDateUp'].errors?.required && uCouForm()['startDateUp'].touched\">Coupon start date is required!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update end date</mat-label>\n              <input type=\"date\" matInput placeholder=\"Update coupon end date...\" formControlName=\"endDateUp\"/>\n              <mat-error *ngIf=\"uCouForm()['endDateUp'].errors?.required && uCouForm()['endDateUp'].touched\">Coupon end date is required!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update amount</mat-label>\n              <input type=\"number\" matInput placeholder=\"Update coupon amount..\" formControlName=\"amountUp\"/>\n              <mat-error *ngIf=\"uCouForm()['amountUp'].errors?.required && uCouForm()['amountUp'].touched\">Coupon amount is required!</mat-error>\n              <mat-error *ngIf=\"uCouForm()['amountUp'].errors?.min && uCouForm()['amountUp'].touched\">Minimum amount must be above 0!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update price</mat-label>\n              <input type=\"number\" matInput placeholder=\"Update coupon price..\" formControlName=\"priceUp\"/>\n              <mat-error *ngIf=\"uCouForm()['priceUp'].errors?.required && uCouForm()['priceUp'].touched\">Coupon price is required!</mat-error>\n              <mat-error *ngIf=\"uCouForm()['priceUp'].errors?.min && uCouForm()['priceUp'].touched\">Minimum price must be above 0!</mat-error>\n          </mat-form-field><br/>\n          <mat-form-field>\n              <mat-label>Update image</mat-label>\n              <input type=\"text\" matInput placeholder=\"Update coupon image..\" formControlName=\"imageUp\"/>\n              <mat-error *ngIf=\"uCouForm()['imageUp'].errors?.required && uCouForm()['imageUp'].touched\">Coupon image is required!</mat-error>\n          </mat-form-field><br/><br/>\n          <button mat-raised-button (click)=\"updateCoupon()\" [disabled]=\"!updateCouponForm.valid\">Update</button><button mat-raised-button (click)=\"closeCouponUpdate()\">Cancel</button>\n    </form><br/>\n    \n    <h1>Filter coupons:</h1>\n    <mat-slide-toggle [formControl]=\"priceFilter\">Max Price</mat-slide-toggle><br/>\n    <mat-slide-toggle [formControl]=\"categoryFilter\">Category</mat-slide-toggle><br/>\n\n    <div *ngIf=\"priceFilter.value\">\n        <mat-form-field>\n            <input type=\"number\" matInput placeholder=\"Enter maximum price\" [formControl]=\"maxPrice\"/>\n        </mat-form-field>\n        <button mat-raised-button (click)=\"getCouponsByMaxPrice()\">Filter</button>\n    </div><br/>\n    \n    <div *ngIf=\"categoryFilter.value\">\n        <mat-form-field>\n            <mat-select [formControl]=\"categoryType\" placeholder=\"Choose category\">\n                <mat-option value=\"Restaurants\">Restaurants</mat-option>\n                <mat-option value=\"Vacation\">Vacation</mat-option>\n                <mat-option value=\"Electronics\">Electronics</mat-option>\n                <mat-option value=\"Clothing\">Clothing</mat-option>\n                <mat-option value=\"Entertainment\">Entertainment</mat-option>\n            </mat-select>\n          </mat-form-field>\n        <button mat-raised-button (click)=\"getCouponsByCategory()\">Filter</button>\n    </div><br/>\n\n    <ul *ngIf=\"filterCoupons\">\n        <li *ngFor=\"let fCoupon of filterCoupons\">ID: {{fCoupon.couponId}} |  CAT: {{fCoupon.category}}, TITLE: {{fCoupon.title}}, DESC: {{fCoupon.description}} | {{fCoupon.startDate}} - {{fCoupon.endDate}} | AMT: {{fCoupon.amount}}, PRICE: {{fCoupon.price}} | {{fCoupon.image}}</li>\n    </ul><br/>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/model/customer';\nimport { CustomerService } from 'src/app/service/customer.service';\nimport { Coupon } from 'src/app/model/coupon';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  customer: Customer;\n  coupons: Coupon[];\n  filterCoupons: Coupon[];\n\n  categoryFilter: FormControl;\n  priceFilter: FormControl;\n  maxPrice: FormControl;\n  categoryType: FormControl;\n\n  constructor(private customerService:CustomerService) { }\n\n  ngOnInit(): void {\n    this.customerService.findCustomerCoupons(sessionStorage.token).subscribe((coupons)=>{\n      this.coupons = coupons;\n    });\n\n    this.categoryFilter = new FormControl(\"\");\n    this.priceFilter = new FormControl(\"\");\n    this.maxPrice = new FormControl(\"\");\n    this.categoryType = new FormControl(\"\");\n  }\n\n  // FILTER BY MAX PRICE\n  public getCouponsByMaxPrice() {\n    this.customerService.findCustomerCouponsByPrice(sessionStorage.token, this.maxPrice.value).subscribe((result)=>{\n      this.filterCoupons = result;\n    });\n  }\n\n  // FILTER BY CATEGORY\n  public getCouponsByCategory() {\n    this.customerService.findCustomerCouponsByCategory(sessionStorage.token, this.categoryType.value).subscribe((result)=>{\n      this.filterCoupons = result;\n    });\n  }\n\n  public showDetails() {\n    this.customerService.customerDetails(sessionStorage.token).subscribe((customer)=>{\n      this.customer = customer\n    }, (err)=>{\n      console.log(err)\n    });\n  }\n\n}\n","<div>\n\n    <span>\n     <button mat-raised-button (click)=\"showDetails()\">Your information</button>\n     <span *ngIf=\"customer\">Your ID: {{customer.customerId}} | First name: {{customer.firstName}} | Last name: {{customer.lastName}} | Email: {{customer.customerEmail}} | Password: {{customer.customerPassword}}</span>\n    </span><br/><br/>\n\n    <h1>All of your purchased coupons:</h1>\n    <ul>\n        <li *ngFor=\"let coupon of coupons\">ID: {{coupon.couponId}} |  CAT: {{coupon.category}}, TITLE: {{coupon.title}}, DESC: {{coupon.description}} | {{coupon.startDate}} - {{coupon.endDate}} | AMT: {{coupon.amount}}, PRICE: {{coupon.price}} | {{coupon.image}}</li>\n    </ul><br/>\n\n    <h1>Filter Your coupons:</h1>\n    <mat-slide-toggle [formControl]=\"priceFilter\">Max Price</mat-slide-toggle><br/>\n    <mat-slide-toggle [formControl]=\"categoryFilter\">Category</mat-slide-toggle><br/>\n\n    <div *ngIf=\"priceFilter.value\">\n        <mat-form-field>\n            <input type=\"number\" matInput placeholder=\"Enter maximum price\" [formControl]=\"maxPrice\"/>\n        </mat-form-field>\n        <button mat-raised-button (click)=\"getCouponsByMaxPrice()\">Filter</button>\n    </div><br/>\n    \n    <div *ngIf=\"categoryFilter.value\">\n        <mat-form-field>\n            <mat-select [formControl]=\"categoryType\" placeholder=\"Choose category\">\n                <mat-option value=\"Restaurants\">Restaurants</mat-option>\n                <mat-option value=\"Vacation\">Vacation</mat-option>\n                <mat-option value=\"Electronics\">Electronics</mat-option>\n                <mat-option value=\"Clothing\">Clothing</mat-option>\n                <mat-option value=\"Entertainment\">Entertainment</mat-option>\n            </mat-select>\n          </mat-form-field>\n        <button mat-raised-button (click)=\"getCouponsByCategory()\">Filter</button>\n    </div><br/>\n\n    <ul *ngIf=\"filterCoupons\">\n        <li *ngFor=\"let fCoupon of filterCoupons\">ID: {{fCoupon.couponId}} |  CAT: {{fCoupon.category}}, TITLE: {{fCoupon.title}}, DESC: {{fCoupon.description}} | {{fCoupon.startDate}} - {{fCoupon.endDate}} | AMT: {{fCoupon.amount}}, PRICE: {{fCoupon.price}} | {{fCoupon.image}}</li>\n    </ul><br/>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/model/coupon';\nimport { CouponLoaderService } from 'src/app/service/coupon-load.service';\nimport { LoginService } from 'src/app/service/login.service';\nimport { CustomerService } from 'src/app/service/customer.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  coupons:Coupon[];\n  toBuyCoupon: Coupon;\n  userType: string = sessionStorage.getItem('userType');\n  customer: boolean = false;\n\n  constructor(private coupService:CouponLoaderService, private loginService:LoginService, private customerService:CustomerService, private snack:MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.coupService.getAllCoupons().subscribe((coupons)=>{\n      this.coupons = coupons\n    });\n\n    this.checkUser()\n  }\n\n  public purchaseCoupon(coupon) {\n    this.toBuyCoupon = coupon\n    this.customerService.purchaseCoupon(sessionStorage.token, coupon).subscribe((coupon)=>{\n      this.snack.open(\"Coupon purchased successfully\", \"\", {duration:2000})\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(err, \"\", {duration:2000})\n    });\n  }\n\n  public checkUser() {\n    if (this.userType === 'customer') {\n    this.customer = true;\n    } else {\n      this.customer = false;\n    }\n  }\n}\n","<div>\n\n    <h1>Our totally legit coupon stock:</h1><br/>\n\n    <ul>\n        <li *ngFor=\"let coupon of coupons\">ID: {{coupon.couponId}} , TITLE: {{coupon.title}}, DESC:  {{coupon.description}} , {{coupon.startDate}} - {{coupon.endDate}} , Amount: {{coupon.amount}}, price: {{coupon.price}} , image: {{coupon.image}},  Category: {{coupon.category}}\n            <button mat-raised-button (click)=\"purchaseCoupon(coupon)\" *ngIf=\"customer === true\">Purchase 🛒</button><br/><br/>\n        </li>\n    </ul>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/service/login.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  userType: string = sessionStorage.getItem('userType');\n\n  constructor(private loginService:LoginService, private fb:FormBuilder, private snack:MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      clientType: ['', Validators.required]\n    });\n    \n  }\n\n  public login() {\n    this.loginService.login(this.loginForm.controls['email'].value, this.loginForm.controls['password'].value, this.loginForm.controls['clientType'].value).subscribe((tokenFromServer)=>{\n      sessionStorage.token = tokenFromServer;\n      switch (this.loginForm.controls['clientType'].value) {\n        case 'Administrator':\n          sessionStorage.setItem('userType', 'admin');\n          break;\n      \n        case 'Company':\n          sessionStorage.setItem('userType', 'company');\n          break;\n  \n        case 'Customer':\n          sessionStorage.setItem('userType', 'customer');\n          break;\n\n        default:\n          break;\n      }\n      this.snack.open(\"Login successful!\", \"\", {duration:2000})\n      window.location.reload()\n    }, (err)=>{\n      console.log(err)\n      this.snack.open(\"Incorrect email, password or client type!\", \"\", {duration:2000});\n    });\n  }\n\n  public logout() {\n    this.loginService.logout(sessionStorage.token).subscribe((res)=>{\n      sessionStorage.removeItem(\"token\")\n      sessionStorage.removeItem(\"userType\")\n      this.snack.open(res, \"\", {duration:2000})\n      window.location.reload()\n    }, (err)=>{\n      console.log(err)\n    });\n  }\n\n  public getUserType() {\n    return this.userType;\n  }\n\n  public fc() {\n    return this.loginForm.controls;\n  }\n\n}\n","<div>\n\n    <h1>Login</h1><br/>\n\n    <form [formGroup]=\"loginForm\"> \n\n        <mat-form-field>\n            <mat-label>Email</mat-label>\n            <input type=\"email\" matInput placeholder=\"Enter email\" formControlName=\"email\"/>\n            <mat-error *ngIf=\"fc()['email'].errors?.required && fc()['email'].touched\">Email is required!</mat-error>\n            <mat-error *ngIf=\"fc()['email'].errors?.email && fc()['email'].touched\">Not a valid email!</mat-error> \n        </mat-form-field><br/>\n\n        <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input type=\"password\" matInput placeholder=\"Enter password\" formControlName=\"password\"/>\n            <mat-error *ngIf=\"fc()['password'].errors?.required && fc()['password'].touched\">Password is required!</mat-error> \n        </mat-form-field><br/>\n\n        <mat-form-field>\n            <mat-select formControlName=\"clientType\" placeholder=\"ClientType\">\n                <mat-option value=\"Administrator\">Administrator</mat-option>\n                <mat-option value=\"Company\">Company</mat-option>\n                <mat-option value=\"Customer\">Customer</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"fc()['clientType'].errors?.required\">Select a ClientType!</mat-error> \n        </mat-form-field><br/>\n\n        <button mat-button (click)=\"login()\" [disabled]=\"!loginForm.valid\">Login</button>\n        <button mat-button (click)=\"logout()\">Logout</button>\n        \n    </form><br/><br/>\n\n</div>\n","export class Company {\n\n    constructor(public companyId:number, public name:string, public companyEmail:string, public companyPassword:string){}\n\n}\n","import { CategoryType } from '../enum/category-type.enum';\nimport { Company } from './company';\n\nexport class Coupon {\n\n    constructor(public couponId:number, public category:CategoryType, public title:string, public description:string, public startDate:Date, public endDate:Date,\n         public amount:number, public price:number, public image:string){}\n\n}\n","export class Customer {\n\n    constructor(public customerId:number, public firstName:string, public lastName:string, public customerEmail:string, public customerPassword:string){}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Company } from '../model/company';\nimport { Customer } from '../model/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private client:HttpClient) { }\n\n  createCompany(token:string, company:Company){\n    return this.client.post<Company>(\"http://localhost:8080/admin/create/company/\" + token, company);\n  }\n\n  updateCompany(token:string, company:Company){\n    return this.client.put<Company>(\"http://localhost:8080/admin/update/company/\" + token, company);\n  }\n\n  deleteCompany(token:string, id:number){\n    return this.client.delete(\"http://localhost:8080/admin/delete/company/\" + id + \"/\" + token, {responseType: 'text'});\n  }\n\n  getAllCompanies(token:string){\n    return this.client.get<Company[]>(\"http://localhost:8080/admin/find/all/companies/\" + token);\n  }\n\n  getOneCompany(token:string, id:number){\n    return this.client.get<Company>(\"http://localhost:8080/admin/find/one/company/\" + id + \"/\" + token);\n  }\n\n  createCustomer(token:string, customer:Customer){\n    return this.client.post<Customer>(\"http://localhost:8080/admin/create/customer/\" + token, customer);\n  }\n\n  updateCustomer(token:string, customer:Customer){\n    return this.client.put<Customer>(\"http://localhost:8080/admin/update/customer/\" + token, customer);\n  }\n\n  deleteCustomer(token:string, id:number){\n    return this.client.delete(\"http://localhost:8080/admin/delete/customer/\" + id + \"/\" + token, {responseType: 'text'});\n  }\n\n  getAllCustomers(token:string){\n    return this.client.get<Customer[]>(\"http://localhost:8080/admin/find/all/customers/\" + token);\n  }\n\n  getOneCustomer(token:string, id:number){\n    return this.client.get<Customer>(\"http://localhost:8080/admin/find/one/customer/\" + id + \"/\" + token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Coupon } from '../model/coupon';\nimport { CategoryType } from '../enum/category-type.enum';\nimport { Company } from '../model/company';\nimport { Session } from 'protractor';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  constructor(private client:HttpClient) { }\n\n  createCoupon(token:string, coupon:Coupon){\n    return this.client.post<Coupon>(\"http://localhost:8080/company/create/coupon/\" + token, coupon);\n  }\n\n  updateCoupon(token:string, coupon:Coupon){\n    return this.client.put<Coupon>(\"http://localhost:8080/company/update/coupon/\" + token, coupon,);\n  }\n\n  deleteCoupon(token:string, id:number){\n    return this.client.delete(\"http://localhost:8080/company/delete/coupon/\" + id + \"/\" + token, {responseType: 'text'});\n  }\n\n  findAllCoupons(token:string){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/find/all/coupons/\" + token);\n  }\n\n  findOneCoupon(token:string, id:number){\n    return this.client.get<Coupon>(\"http://localhost:8080/company/find/one/coupon/\" + id + \"/\" + token);\n  }\n\n  findAllCouponsByCategory(token:string, category:CategoryType){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/find/all/coupons/category/\" + category + \"/\" + token);\n  }\n\n  findAllCouponsByPrice(token:string, price:number){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/find/all/coupons/price/\" + price + \"/\" + token);\n  }\n\n  companyDetails(token:string){\n    return this.client.get<Company>(\"http://localhost:8080/company/info/\" + token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Coupon } from '../model/coupon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CouponLoaderService {\n\n  constructor(private client:HttpClient) { }\n\n  getAllCoupons() {\n    return this.client.get<Coupon[]>(\"http://localhost:8080/show\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Coupon } from '../model/coupon';\nimport { CategoryType } from '../enum/category-type.enum';\nimport { Customer } from '../model/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private client:HttpClient) { }\n\n  purchaseCoupon(token:string, coupon:Coupon){\n    return this.client.post<Coupon>(\"http://localhost:8080/customer/purchase/\" + token, coupon);\n  }\n\n  findCustomerCoupons(token:string){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/find/all/coupons/\" + token);\n  }\n\n  findCustomerCouponsByCategory(token:string, category:CategoryType){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/find/all/coupons/category/\" + category + \"/\" + token);\n  }\n\n  findCustomerCouponsByPrice(token:string, price:number){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/find/all/coupons/price/\" + price + \"/\" + token);\n  }\n\n  customerDetails(token:string){\n    return this.client.get<Customer>(\"http://localhost:8080/customer/info/\" + token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ClientType } from '../enum/client-type.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private client:HttpClient) { }\n\n  login(email:string, password:string, clientType:ClientType){\n    return this.client.post(\"http://localhost:8080/login/\" + email + \"/\" + password + \"/\" + clientType, null, {responseType:'text'});\n  }\n\n  logout(token:string){\n    return this.client.post(\"http://localhost:8080/logout/\" + token, null, {responseType: 'text'});\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}